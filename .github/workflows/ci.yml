name: ci

on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint (Rust ${{ matrix.rust }})
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        rust: [stable, nightly]

    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          components: clippy, rustfmt

      - name: Format check
        run: cargo fmt --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D -warnings

  build:
    name: Build (${{ matrix.os }}, Rust ${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, nightly]

    env:
      CARGO_TERM_COLOR: always
      RUST_BACKTRACE: full

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - name: Build
        run: cargo build

      - name: Test
        run: cargo test
